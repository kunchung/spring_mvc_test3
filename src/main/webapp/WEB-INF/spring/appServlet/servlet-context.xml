<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- <view-controller path="/users/reg_success" view-name="users/regSuccess" 
		/> -->

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/jsp directory -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/jsp/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>

	<beans:bean id="messageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource"
		p:basename="classpath:/spring/messages" />

	<context:component-scan base-package="net.kc.spring" />

	<beans:bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<beans:property name="driverClassName" value="${jdbc.driverClassName}" />
		<beans:property name="url" value="${jdbc.url}" />
		<beans:property name="username" value="${jdbc.username}" />
		<beans:property name="password" value="${jdbc.password}" />
	</beans:bean>

	<!-- <beans:bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean"> 
		<beans:property name="dataSource" ref="dataSource" /> <beans:property name="hibernateProperties"> 
		<beans:props> <beans:prop key="hibernate.dialect">org.hibernate.dialect.HSQLDialect 
		</beans:prop> <beans:prop key="hibernate.show_sql">true</beans:prop> </beans:props> 
		</beans:property> </beans:bean> -->

	<beans:bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<beans:property name="dataSource" ref="dataSource" />
		<beans:property name="mapperLocations" value="classpath:net/kc/spring/user/UserMapper.xml" />
	</beans:bean>

	<beans:bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<beans:constructor-arg index="0" ref="sqlSessionFactory" />
	</beans:bean>

	<beans:bean id="userMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<beans:property name="mapperInterface" value="net.kc.spring.user.domain.UserMapper" />
		<beans:property name="sqlSessionFactory" ref="sqlSessionFactory" />
	</beans:bean>

	<!-- <beans:bean id="userDao" class="net.kc.spring.user.domain.UserDaoImpl"> 
		<beans:property name="sqlSession" ref="sqlSession" /> </beans:bean> -->

	<context:property-placeholder location="classpath:jdbc.properties" />

</beans:beans>

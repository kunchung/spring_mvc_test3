<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop" xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->

	<!-- <mvc:view-controller path="/users/reg_success" view-name="users/regSuccess" /> -->

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<mvc:resources mapping="/resources/**" location="/resources/" />

	<context:property-placeholder location="classpath:jdbc.properties" />

	<context:component-scan base-package="net.kc.spring" />
	<!--
	<context:annotation-config />
	-->

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/jsp directory -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/jsp/" />
		<property name="suffix" value=".jsp" />
	</bean>

	<bean id="userValidator" class="net.kc.spring.user.domain.UserValidator" />

	<!-- Messages  -->
	<bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basenames">
			<list>
				<value>classpath:properties/labels</value>
				<value>classpath:properties/messages</value>
			</list>
		</property>
	</bean>
	<!--
	<bean id="messageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource"
		p:basename="classpath:/spring/messages" />
	-->

	<bean id="localeResolver" class="org.springframework.web.servlet.i18n.SessionLocaleResolver">
		<property name="defaultLocale" value="en" />
	</bean>

	<mvc:interceptors>
		<bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
			<property name="paramName" value="locale" />
		</bean>
	</mvc:interceptors>
	
	<!-- The following configuration does not work, reason unknown  -->
	<!--
	<bean id="localeChangeInterceptor" class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
		<property name="paramName" value="locale" />
	</bean>

	<bean class="org.springframework.web.servlet.mvc.support.ControllerClassNameHandlerMapping" >
		<property name="interceptors">
		   <list>
			<ref bean="localeChangeInterceptor" />
		   </list>
		</property>
	</bean>
	-->
	
	<!-- Conversion  -->
	<bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
		<property name="converters">
			<set>
				<bean class="net.kc.spring.common.StringToDateConverter">
					<constructor-arg type="java.lang.String" value="yyyy-MM-dd" />
				</bean>
			</set>
		</property>
		<property name="formatters">
			<set>
				<bean class="net.kc.spring.common.DateFormatter">
					<constructor-arg type="java.lang.String" value="yyyy-MM-dd" />
				</bean>
			</set>
		</property>
	</bean>

	<!-- Enables the Spring MVC @Controller programming model and ConversionService -->
	<mvc:annotation-driven conversion-service="conversionService" />
	<!--
	<mvc:annotation-driven/>
	  -->

	<!-- Database  -->
	<tx:annotation-driven transaction-manager="txManager" />

	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean>

	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!--
	<bean id="userDao" class="net.kc.spring.user.dao.UserDaoImpl">
		<property name="jdbcTemplate" ref="jdbcTemplate" />
	</bean>
	-->

	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations" value="classpath:mappers/**/*.xml" />
		<!-- <property name="typeAliases" value="net.kc.spring.user.domain.User,net.kc.spring.user.domain.UserGroup"/> -->
		<property name="configLocation" value="classpath:mybatis-config.xml" />
	</bean>

	<!-- 
	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.HSQLDialect </prop>
				<prop key="hibernate.show_sql">true</prop>
			</props>
		</property>
	</bean> 
	-->

	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory" />
	</bean>

	<bean id="userMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<property name="mapperInterface" value="net.kc.spring.user.dao.UserMapper" />
		<property name="sqlSessionFactory" ref="sqlSessionFactory" />
	</bean>

	<bean id='sqlMapClient' class="org.springframework.orm.ibatis.SqlMapClientFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name='configLocation' value="classpath:ibatis/sqlmap-config.xml" />
		<!--
        <property name='mappingLocations' value="classpath:ibatis/ibatis-mapping.xml"/>
		-->
	</bean>

	<!-- 
	<bean id="userDao" class="net.kc.spring.user.domain.UserDaoImpl">
		<property name="sqlSession" ref="sqlSession" />
	</bean> 
	-->

	<!--
	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="create*" propagation="REQUIRED" isolation="READ_COMMITTED" />
			<tx:method name="*" propagation="REQUIRED" isolation="READ_COMMITTED"
				read-only="true" />
		</tx:attributes>
	</tx:advice>

	<aop:config>
		<aop:pointcut id="serviceMethod"
			expression="execution(* net.kc.spring.user.service.UserService.*(..))" />
		<aop:advisor pointcut-ref="serviceMethod" advice-ref="txAdvice" />
	</aop:config>
	-->
</beans>
